{"version":3,"sources":["logo.png","styled.js","utils/usePersistedState.js","components/Card.js","components/Topics.js","components/Menu.js","index.js","components/About.js","components/Cards.js","utils/usePagination.js","components/NotFound.js"],"names":["COLOURS","WHTIE","LIGHT_GREY","DARK_GREY","ORANGE","PALE_ORANGE","GREEN","YELLOW","RED","AddNewForm","styled","div","AppContainer","Button","button","CardContainer","CardContent","props","showFront","WHITE","DropdownMenu","ul","FormInput","input","Header","header","Logo","img","MenuContainer","nav","Section","section","TopicContainer","usePersistedState","key","defaultValue","useState","localStorage","getItem","state","setState","useEffect","setItem","Card","card","setShowFront","handleFlip","onClick","question","answer","_id","Topic","topic","name","description","Menu","isMenuDisplayed","setMenuDisplay","icon","faBars","size","to","ReactDOM","render","StrictMode","src","logo","alt","path","exact","component","topics","setTopics","useReducer","x","forceUpdate","topicName","setTopicName","topicDescription","setTopicDescription","isFormDisplayed","setFormDisplay","fetch","then","response","json","className","length","map","pathname","aboutProps","topicId","type","faMinus","faPlus","onSubmit","event","preventDefault","method","body","JSON","stringify","headers","newTopic","push","htmlFor","value","onChange","target","disabled","cards","setCards","cardQuestion","setCardQuestion","cardAnswer","setCardAnswer","topicPath","setTopicPath","redirectMessage","setRedirectMessage","undefined","location","catch","error","console","paginatedData","data","perPage","currentPage","setCurrentPage","maxPage","Math","ceil","next","min","previous","max","currentData","begin","end","slice","usePagination","handleUpdateCard","page","updatedDate","Date","status","title","canViewAssessmentButtons","canViewSuccessMessage","newCard","document","getElementById"],"mappings":"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","file":"static/js/main.bdad49a0.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.db397de1.png\";","import styled from 'styled-components'\n\nconst COLOURS = {\n  WHTIE: `#ffffff`,\n  LIGHT_GREY: `#c8c8c8`,\n  DARK_GREY: `#484848`,\n  ORANGE: `rgb(238, 111, 45)`,\n  PALE_ORANGE: `rgb(238, 111, 45, 0.5)`,\n  GREEN: `#8ac926`,\n  YELLOW: `#ffca3a`,\n  RED: `#ff595e`,\n}\n\nexport const AddNewForm = styled.div`\n  color: ${COLOURS.DARK_GREY};\n  background: ${COLOURS.PALE_ORANGE};\n  padding: 10px;\n`;\n\nexport const AppContainer = styled.div`\n  text-align: center;\n  font-family: Arial, Verdana, sans-serif;\n  display: grid;\n  grid-template-columns: 100px auto;\n  grid-template-rows: repeat(2, 40px);\n  grid-gap: 1em;\n`;\n\nexport const Button = styled.button`\n  margin: 10px;\n  border: none;\n  padding: 10px;\n  border-radius: 10px;\n`;\n\nexport const CardContainer = styled.div`\n  margin: 10px;\n  padding: 10px;\n`;\n\nexport const CardContent = styled.div`\n  margin: auto;\n  padding: 10px;\n  width: 40%;\n  align-content: center;\n  border-radius: 10px;\n  box-shadow: 0 0 5px 2px rgba(0, 0, 0, .3);\n\n  ${props => props.showFront\n    ? \n    `background: ${COLOURS.WHITE};\n    color: ${COLOURS.DARK_GREY};`\n    :\n    `background: ${COLOURS.DARK_GREY};\n    color: ${COLOURS.WHTIE};`\n    }\n`;\n\nexport const DropdownMenu = styled.ul`\n  list-style: none;\n`;\n\nexport const FormInput = styled.input`\n  border: none;\n  margin: 10px;\n  padding: 10px;\n`;\n\nexport const Header = styled.header`\n  grid-row: 1;\n  grid-column: 2;\n`;\n\nexport const Logo = styled.img`\n  width:50px\n`;\n\nexport const MenuContainer = styled.nav`\n  text-align: left;\n  grid-row: 1;\n  grid-column: 1;\n`;\n\nexport const Section = styled.section`\n  grid-row: 2;\n  grid-column: 2;\n`;\n\nexport const TopicContainer = styled.div`\n  background: ${COLOURS.LIGHT_GREY};\n  color: ${COLOURS.DARK_GREY};\n  margin: 20px auto;\n  padding: 10px;\n  width: 40%;\n  align-content: center;\n  border-radius: 10px;\n`;\n","import { useState, useEffect } from 'react';\n\nexport const usePersistedState = (key, defaultValue) => {\n  const [state, setState] = useState(localStorage.getItem(key) || defaultValue);\n  useEffect(() => { localStorage.setItem(key, state); }, [key, state]);\n  return [state, setState];\n};\n","import React, { useState } from 'react';\nimport { CardContainer, CardContent } from '../styled';\n\nexport const Card = ({ card }) => {\n  const [showFront, setShowFront] = useState(true);\n\n  const handleFlip = () => {\n    setShowFront(!showFront);\n  }\n\n  return (\n    <CardContainer key={card._id}>\n      {showFront\n        ?\n        <div>\n          <p>Question</p>\n          <CardContent\n            showFront={showFront}\n            onClick={handleFlip}>\n            <h3>{card.question}</h3>\n          </CardContent>\n        </div>\n        :\n        <div>\n          <p>Answer</p>\n          <CardContent\n            showFront={showFront}\n            onClick={handleFlip}>\n            <h3>{card.answer}</h3>\n          </CardContent>\n        </div>\n      }\n    </CardContainer>\n  );\n};\n","import React, { useState, useEffect, useReducer } from 'react';\nimport { Link } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus, faMinus } from '@fortawesome/free-solid-svg-icons';\nimport { AddNewForm, FormInput, Button, TopicContainer } from '../styled';\n\nconst Topic = ({ topic }) => {\n  return (\n    <TopicContainer key={topic._id}>\n      <h3>{topic.name}</h3>\n      <p>{topic.description}</p>\n    </TopicContainer>\n  )\n};\n\nexport const Topics = () => {\n  const [topics, setTopics] = useState([]);\n  const [, forceUpdate] = useReducer(x => x + 1, 0);\n  const [topicName, setTopicName] = useState('');\n  const [topicDescription, setTopicDescription] = useState('');\n  const [isFormDisplayed, setFormDisplay] = useState(false);\n\n  const handleFormDisplay = () => setFormDisplay(!isFormDisplayed);\n\n  useEffect(() => {\n    fetch('/api/topics')\n      .then(response => response.json())\n      .then(setTopics);\n  }, []);\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    fetch(`/api/topics`, {\n      method: 'PUT',\n      body: JSON.stringify({\n        name: topicName,\n        description: topicDescription\n      }),\n      headers: { 'Content-Type': 'application/json' },\n    })\n      .then((response) => response.json())\n      .then(newTopic => {\n        topics.push(newTopic);\n        setTopics(topics);\n        setTopicName('');\n        setTopicDescription('');\n        setFormDisplay(!isFormDisplayed);\n        forceUpdate();\n      });\n  }\n\n  return (\n    <div className=\"topics\">\n      <h2>Topics</h2>\n      {topics.length !== 0 &&\n        topics.map(topic =>\n          <Link\n            to={{\n              pathname: \"/cards\",\n              aboutProps: {\n                topicId: topic._id,\n                topicName: topic.name\n              }\n            }}\n            key={topic._id}>\n            <Topic topic={topic} />\n          </Link>\n        )\n      }\n      <Button\n        type=\"submit\"\n        onClick={handleFormDisplay}>\n        {!isFormDisplayed ?\n          <span>Add new topic <FontAwesomeIcon icon={faPlus} /></span> :\n          <span>Hide <FontAwesomeIcon icon={faMinus} /></span>}\n      </Button>\n      {isFormDisplayed && <AddNewForm>\n        <form onSubmit={handleSubmit}>\n          <label htmlFor=\"name\">Topic name: </label>\n          <FormInput\n            type=\"text\"\n            name=\"name\"\n            value={topicName}\n            onChange={({ target: { value } }) => setTopicName(value)} />\n          <br />\n          <label htmlFor=\"description\">Topic description: </label>\n          <FormInput\n            type=\"text\"\n            name=\"description\"\n            value={topicDescription}\n            onChange={({ target: { value } }) => setTopicDescription(value)} />\n          <br />\n          <Button\n            type=\"submit\"\n            disabled={!topicName}>OK</Button>\n        </form>\n      </AddNewForm>}\n    </div>\n  );\n};","import { Link } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faBars } from '@fortawesome/free-solid-svg-icons'\nimport React, { useState } from 'react';\nimport { DropdownMenu, MenuContainer } from '../styled';\n\nexport const Menu = () => {\n  const [isMenuDisplayed, setMenuDisplay] = useState(false);\n\n  function onToggleChange() {\n    setMenuDisplay(!isMenuDisplayed);\n  }\n\n  return (\n    <MenuContainer>\n      <FontAwesomeIcon\n        onClick={onToggleChange}\n        icon={faBars}\n        size=\"2x\" />\n      {isMenuDisplayed &&\n        <DropdownMenu>\n          <li><Link to=\"/\">Topics</Link></li>\n          <li><Link to=\"/about\">About</Link></li>\n        </DropdownMenu>\n      }\n    </MenuContainer >\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from 'react-router-dom';\nimport logo from './logo.png';\nimport { Cards } from './components/Cards.js';\nimport { Topics } from './components/Topics.js';\nimport { About } from './components/About';\nimport { NotFound } from './components/NotFound';\nimport { Menu } from './components/Menu';\nimport { AppContainer, Logo, Header, Section } from './styled';\n\nReactDOM.render(\n  <React.StrictMode>\n    <AppContainer>\n      <Router>\n        <Header>\n          <Link to=\"/\"><Logo src={logo} alt=\"Logo\" /></Link>\n        </Header>\n        <Menu />\n        <Section>\n          <Switch>\n            <Route path=\"/\" exact component={Topics} />\n            <Route path=\"/about\" exact component={About} />\n            <Route path=\"/cards\" exact component={Cards} />\n            <Route component={NotFound} />\n          </Switch>\n        </Section>\n      </Router>\n    </AppContainer>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","export const About = () => {\n  return (\n    <div>\n      <h2>About</h2>\n      <p>Maecenas eros metus, pellentesque id dolor id, semper aliquam leo.</p>\n    </div>\n  );\n};\n","import React, { useState, useEffect, useReducer } from 'react';\nimport { Link } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus, faMinus } from '@fortawesome/free-solid-svg-icons';\nimport { AddNewForm, FormInput, Button } from '../styled';\nimport { usePagination } from '../utils/usePagination';\nimport { usePersistedState } from '../utils/usePersistedState';\nimport { Card } from './Card';\n\nexport const Cards = (props) => {\n  const [cards, setCards] = useState([]);\n  const [cardQuestion, setCardQuestion] = useState('');\n  const [cardAnswer, setCardAnswer] = useState('');\n  const [isFormDisplayed, setFormDisplay] = useState(false);\n  const [topicPath, setTopicPath] = usePersistedState('topicPath', null);\n  const [topicName, setTopicName] = usePersistedState('topicName', null);\n  const [, forceUpdate] = useReducer(x => x + 1, 0);\n  const [redirectMessage, setRedirectMessage] = useState();\n\n  const handleFormDisplay = () => {\n    setFormDisplay(!isFormDisplayed);\n    setRedirectMessage('');\n  };\n\n  useEffect(() => {\n    setTopicPath(props.location.aboutProps !== undefined ? props.location.aboutProps.topicId : topicPath);\n    setTopicName(props.location.aboutProps !== undefined ? props.location.aboutProps.topicName : topicName);\n    fetch(`/api/cards/${topicPath}`)\n      .then(response => response.json())\n      .then(setCards)\n      .catch(error => {\n        console.error('ERROR:', error);\n      });\n  }, [props.location.aboutProps, topicPath, topicName, setTopicPath, setTopicName]);\n\n  const paginatedData = usePagination(cards, 1);\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    fetch(`/api/cards`, {\n      method: 'PUT',\n      body: JSON.stringify({\n        type: 'simple',\n        topicId: topicPath,\n        question: cardQuestion,\n        answer: cardAnswer\n      }),\n      headers: { 'Content-Type': 'application/json' },\n    })\n      .then((response) => response.json())\n      .then(newCard => {\n        cards.push(newCard);\n        setCards(cards);\n        setCardQuestion('');\n        setCardAnswer('');\n        setFormDisplay(!isFormDisplayed);\n        forceUpdate();\n        setRedirectMessage('Card added');\n      })\n      .catch(error => {\n        console.error('ERROR:', error);\n        setRedirectMessage('Error - Card not added');\n      });\n  };\n\n  const handleUpdateCard = (event, page) => {\n    event.preventDefault();\n    fetch(`/api/cards`, {\n      method: 'PATCH',\n      body: JSON.stringify({\n        _id: paginatedData.currentData()[0]._id,\n        updatedDate: new Date(),\n        status: event.target.title,\n      }),\n      headers: { 'Content-Type': 'application/json' },\n    })\n      .then((response) => response.json())\n      .then(() => paginatedData.next(page))\n      .catch(error => {\n        console.error('ERROR:', error);\n        setRedirectMessage('Error');\n      });\n  };\n  const canViewAssessmentButtons =\n    (paginatedData.currentData().length !== 0) && \n    (paginatedData.currentPage <= paginatedData.maxPage);\n\n  const canViewSuccessMessage =\n    (paginatedData.maxPage !== 0) &&\n    (paginatedData.currentPage > paginatedData.maxPage);\n\n  return (\n    <div className=\"cards\">\n      <h2>{topicName}</h2>\n      {cards.length !== 0 &&\n        paginatedData.currentData().map(card =>\n          <Card key={card._id} card={card} />\n        )}\n      {canViewAssessmentButtons &&\n        <div>\n          <Button\n            title=\"unsure\"\n            onClick={handleUpdateCard}>I don't remember this at all</Button>\n          <Button\n            title=\"neutral\"\n            onClick={handleUpdateCard}>I barely know this </Button>\n          <Button\n            title=\"confident\"\n            onClick={handleUpdateCard}>I'm confident I know this</Button>\n        </div>}\n      {canViewSuccessMessage &&\n        <div>\n          <div>Well done!</div>\n          <p>Please return <Link to=\"/\">Home</Link></p>\n        </div>}\n      <Button\n        type=\"submit\"\n        onClick={handleFormDisplay}>\n        {!isFormDisplayed ?\n          <span>Add new card <FontAwesomeIcon icon={faPlus} /></span> :\n          <span>Hide <FontAwesomeIcon icon={faMinus} /></span>}\n      </Button>\n      {isFormDisplayed && <AddNewForm>\n        <form onSubmit={handleSubmit}>\n          <label htmlFor=\"question\">Question: </label>\n          <FormInput\n            type=\"text\"\n            name=\"question\"\n            value={cardQuestion}\n            onChange={({ target: { value } }) => setCardQuestion(value)} />\n          <br />\n          <label htmlFor=\"answer\">Answer: </label>\n          <FormInput\n            type=\"text\"\n            name=\"answer\"\n            value={cardAnswer}\n            onChange={({ target: { value } }) => setCardAnswer(value)} />\n          <br />\n          <Button\n            type=\"submit\"\n            disabled={!cardQuestion || !cardAnswer}>OK</Button>\n        </form>\n      </AddNewForm>}\n      <p>{redirectMessage}</p>\n    </div>\n  )\n};\n","import { useState } from 'react';\n\nexport const usePagination = (data, perPage) => {\n  const [currentPage, setCurrentPage] = useState(1);\n  const maxPage = Math.ceil(data.length / perPage);\n\n  const currentData = () => {\n    const begin = (currentPage - 1) * perPage;\n    const end = begin + perPage;\n    return data.slice(begin, end);\n  }\n\n  const next = () => setCurrentPage((currentPage) => Math.min(currentPage + 1, maxPage + 1));\n\n  const previous = () => setCurrentPage((currentPage) => Math.max(currentPage - 1, 1));\n\n  return { next, previous, currentData, currentPage, maxPage };\n};\n","import { Link } from 'react-router-dom';\n\nexport const NotFound = () => (\n  <div>\n    <h3>Not Found</h3>\n    <p>Please return <Link to=\"/\">Home</Link></p>\n  </div>\n);"],"sourceRoot":""}