{"version":3,"sources":["logo.png","styled.js","utils/usePagination.js","utils/usePersistedState.js","components/Card.js","components/Topics.js","components/Menu.js","index.js","components/About.js","components/Cards.js","components/NotFound.js"],"names":["COLOURS","AddNewForm","styled","div","AppContainer","Button","button","CardContainer","CardContent","props","showFront","DropdownMenu","ul","FormInput","input","Header","header","Logo","img","MenuContainer","nav","Section","section","TopicCategory","topicStatus","TopicContainer","usePagination","data","perPage","useState","currentPage","setCurrentPage","maxPage","Math","ceil","length","next","min","previous","max","currentData","begin","end","slice","usePersistedState","key","defaultValue","localStorage","getItem","state","setState","useEffect","setItem","Card","card","setShowFront","handleFlip","onClick","question","answer","_id","Topic","topic","name","description","Menu","isMenuDisplayed","setMenuDisplay","icon","faBars","size","to","ReactDOM","render","StrictMode","src","logo","alt","path","exact","component","topics","setTopics","topicName","setTopicName","topicDescription","setTopicDescription","isFormDisplayed","setFormDisplay","useReducer","x","forceUpdate","fetch","then","response","json","catch","error","console","currentDate","moment","dateWeekFromNow","add","topicsNow","filter","dateToNextBeRevised","isBefore","topicsThisWeek","isBetween","topicsNextWeek","isAfter","className","map","pathname","aboutProps","topicId","type","faMinus","faPlus","onSubmit","event","preventDefault","method","body","JSON","stringify","headers","newTopic","push","htmlFor","value","onChange","target","disabled","href","cards","setCards","cardQuestion","setCardQuestion","cardAnswer","setCardAnswer","topicPath","setTopicPath","redirectMessage","setRedirectMessage","isFilterDisplayed","setFilterDisplayed","undefined","location","handleUpdateCard","page","paginatedData","status","title","filteredCards","filteredPaginatedData","allPaginatedData","canViewAssessmentButtons","canViewSuccessMessage","canViewNoCardsMessage","canViewNoFilteredCardsMessage","newCard","document","getElementById"],"mappings":"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","file":"static/js/main.38bfee9b.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.db397de1.png\";","import styled from 'styled-components';\n\nconst COLOURS = {\n  BLACK: `#000`,\n  WHITE: `#fff`,\n  LIGHT_GREY: `#c8c8c8`,\n  DARK_GREY: `#484848`,\n  GREEN: `rgb(12, 201, 94)`,\n  YELLOW: `rgb(255,202,58)`,\n  ORANGE: `rgb(238, 111, 45)`,\n  ORANGE_PALE: `rgb(238, 111, 45, 0.5)`,\n};\n\nexport const AddNewForm = styled.div`\n  color: ${COLOURS.DARK_GREY};\n  background: ${COLOURS.ORANGE_PALE};\n  padding: 10px;\n`;\n\nexport const AppContainer = styled.div`\n  text-align: center;\n  font-family: Arial, Verdana, sans-serif;\n  display: grid;\n  grid-template-columns: 100px auto;\n  grid-template-rows: repeat(2, 40px);\n  grid-gap: 1em;\n`;\n\nexport const Button = styled.button`\n  margin: 10px;\n  border: none;\n  padding: 10px;\n  border-radius: 10px;\n`;\n\nexport const CardContainer = styled.div`\n  margin: 10px;\n  padding: 10px;\n`;\n\nexport const CardContent = styled.div`\n  margin: auto;\n  padding: 10px;\n  width: 40%;\n  align-content: center;\n  border-radius: 10px;\n  box-shadow: 0 0 5px 2px rgba(0, 0, 0, .3);\n\n  ${props => props.showFront\n    ? \n    `background: ${COLOURS.WHITE};\n    color: ${COLOURS.DARK_GREY};`\n    :\n    `background: ${COLOURS.DARK_GREY};\n    color: ${COLOURS.WHITE};`\n    }\n`;\n\nexport const DropdownMenu = styled.ul`\n  list-style: none;\n`;\n\nexport const FormInput = styled.input`\n  border: none;\n  margin: 10px;\n  padding: 10px;\n`;\n\nexport const Header = styled.header`\n  grid-row: 1;\n  grid-column: 2;\n`;\n\nexport const Logo = styled.img`\n  width: 50px;\n`;\n\nexport const MenuContainer = styled.nav`\n  text-align: left;\n  grid-row: 1;\n  grid-column: 1;\n`;\n\nexport const Section = styled.section`\n  grid-row: 2;\n  grid-column: 2;\n`;\n\nexport const TopicCategory = styled.div`\n  color: ${COLOURS.BLACK};\n  align-content: center;\n  border-radius: 10px;\n  margin: 20px;\n  padding: 10px;\n\n  a {\n    color: ${COLOURS.BLACK}\n  }\n\n  ${props =>\n    (props.topicStatus === 'now' && `background: ${COLOURS.ORANGE};`) ||\n    (props.topicStatus === 'thisWeek' && `background: ${COLOURS.YELLOW};`) || \n    (props.topicStatus === 'nextWeek' && `background: ${COLOURS.GREEN};`)\n  }\n`;\n\nexport const TopicContainer = styled.div`\n  margin: 10px auto;\n  padding: 10px;\n  width: 40%;\n  align-content: center;\n  border-radius: 10px;\n  border-color: ${COLOURS.WHITE};\n  border-style: dashed;\n\n  &:hover {\n    color: ${COLOURS.WHITE};\n  }\n`;\n","import { useState } from 'react';\n\nexport const usePagination = (data, perPage) => {\n  const [currentPage, setCurrentPage] = useState(1);\n  const maxPage = Math.ceil(data.length / perPage);\n\n  const currentData = () => {\n    const begin = (currentPage - 1) * perPage;\n    const end = begin + perPage;\n    return data.slice(begin, end);\n  }\n\n  const next = () => setCurrentPage((currentPage) => Math.min(currentPage + 1, maxPage + 1));\n\n  const previous = () => setCurrentPage((currentPage) => Math.max(currentPage - 1, 1));\n\n  return { next, previous, currentData, currentPage, maxPage };\n};\n","import { useState, useEffect } from 'react';\n\nexport const usePersistedState = (key, defaultValue) => {\n  const [state, setState] = useState(localStorage.getItem(key) || defaultValue);\n  useEffect(() => { localStorage.setItem(key, state); }, [key, state]);\n  return [state, setState];\n};\n","import React, { useState } from 'react';\nimport { CardContainer, CardContent } from '../styled';\n\nexport const Card = ({ card }) => {\n  const [showFront, setShowFront] = useState(true);\n\n  const handleFlip = () => {\n    setShowFront(!showFront);\n  }\n\n  return (\n    <CardContainer key={card._id}>\n      {showFront\n        ?\n        <div>\n          <p>Question</p>\n          <CardContent\n            showFront={showFront}\n            onClick={handleFlip}>\n            <h3>{card.question}</h3>\n          </CardContent>\n        </div>\n        :\n        <div>\n          <p>Answer</p>\n          <CardContent\n            showFront={showFront}\n            onClick={handleFlip}>\n            <h3>{card.answer}</h3>\n          </CardContent>\n        </div>\n      }\n    </CardContainer>\n  );\n};\n","import React, { useState, useEffect, useReducer } from 'react';\nimport { Link } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus, faMinus } from '@fortawesome/free-solid-svg-icons';\nimport moment from 'moment';\nimport { AddNewForm, FormInput, Button, TopicContainer, TopicCategory } from '../styled';\n\nconst Topic = ({ topic }) => {\n  return (\n    <TopicContainer key={topic._id}>\n      <h4>{topic.name}</h4>\n      <p>{topic.description}</p>\n    </TopicContainer>\n  )\n};\n\nexport const Topics = () => {\n  const [topics, setTopics] = useState([]);\n  const [topicName, setTopicName] = useState('');\n  const [topicDescription, setTopicDescription] = useState('');\n  const [isFormDisplayed, setFormDisplay] = useState(false);\n  const [, forceUpdate] = useReducer(x => x + 1, 0);\n\n  useEffect(() => {\n    fetch('/api/topics')\n      .then(response => response.json())\n      .catch(error => console.error('ERROR:', error))\n      .then(setTopics);\n  }, []);\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    fetch(`/api/topics`, {\n      method: 'POST',\n      body: JSON.stringify({\n        name: topicName,\n        description: topicDescription\n      }),\n      headers: { 'Content-Type': 'application/json' },\n    })\n      .then((response) => response.json())\n      .then(newTopic => {\n        topics.push(newTopic);\n        setTopics(topics);\n        setTopicName('');\n        setTopicDescription('');\n        setFormDisplay(!isFormDisplayed);\n        forceUpdate();\n      });\n  };\n\n  const handleFormDisplay = () => setFormDisplay(!isFormDisplayed);\n  const currentDate = moment();\n  const dateWeekFromNow = moment().add(7, 'days');\n  const topicsNow = topics.filter(topic => moment(topic.dateToNextBeRevised).isBefore(currentDate));\n  const topicsThisWeek = topics.filter(topic => moment(topic.dateToNextBeRevised).isBetween(currentDate, dateWeekFromNow));\n  const topicsNextWeek = topics.filter(topic => moment(topic.dateToNextBeRevised).isAfter(dateWeekFromNow));\n\n  return (\n    <div className=\"topics\">\n      <TopicCategory\n        topicStatus=\"now\">\n        <h3>These topics need revision now</h3>\n        {topicsNow.length !== 0 &&\n          topicsNow.map(topic =>\n            <Link\n              to={{\n                pathname: \"/cards\",\n                aboutProps: {\n                  topicId: topic._id,\n                  topicName: topic.name\n                }\n              }}\n              key={topic._id}>\n              <Topic topic={topic} />\n            </Link>\n          )\n        }\n      </TopicCategory>\n      <TopicCategory\n        topicStatus=\"thisWeek\">\n        <h3>These topics will need revision this week</h3>\n        {topicsThisWeek.length !== 0 &&\n          topicsThisWeek.map(topic =>\n            <Link\n              to={{\n                pathname: \"/cards\",\n                aboutProps: {\n                  topicId: topic._id,\n                  topicName: topic.name\n                }\n              }}\n              key={topic._id}>\n              <Topic topic={topic} />\n            </Link>\n          )\n        }\n      </TopicCategory>\n      <TopicCategory\n        topicStatus=\"nextWeek\">\n        <h3>These topics don't need revising for now</h3>\n        {topicsNextWeek.length !== 0 &&\n          topicsNextWeek.map(topic =>\n            <Link\n              to={{\n                pathname: \"/cards\",\n                aboutProps: {\n                  topicId: topic._id,\n                  topicName: topic.name\n                }\n              }}\n              key={topic._id}>\n              <Topic topic={topic} />\n            </Link>\n          )\n        }\n      </TopicCategory>\n      <Button\n        type=\"submit\"\n        onClick={handleFormDisplay}>\n        {!isFormDisplayed ?\n          <span>Add new topic <FontAwesomeIcon icon={faPlus} /></span> :\n          <span>Hide <FontAwesomeIcon icon={faMinus} /></span>}\n      </Button>\n      {isFormDisplayed && <AddNewForm>\n        <form onSubmit={handleSubmit}>\n          <label htmlFor=\"name\">Topic name: </label>\n          <FormInput\n            type=\"text\"\n            name=\"name\"\n            value={topicName}\n            onChange={({ target: { value } }) => setTopicName(value)} />\n          <br />\n          <label htmlFor=\"description\">Topic description: </label>\n          <FormInput\n            type=\"text\"\n            name=\"description\"\n            value={topicDescription}\n            onChange={({ target: { value } }) => setTopicDescription(value)} />\n          <br />\n          <Button\n            type=\"submit\"\n            disabled={!topicName}>OK</Button>\n        </form>\n      </AddNewForm>}\n    </div>\n  );\n};\n","import { Link } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faBars } from '@fortawesome/free-solid-svg-icons'\nimport React, { useState } from 'react';\nimport { DropdownMenu, MenuContainer } from '../styled';\n\nexport const Menu = () => {\n  const [isMenuDisplayed, setMenuDisplay] = useState(false);\n\n  function onToggleChange() {\n    setMenuDisplay(!isMenuDisplayed);\n  }\n\n  return (\n    <MenuContainer>\n      <FontAwesomeIcon\n        onClick={onToggleChange}\n        icon={faBars}\n        size=\"2x\" />\n      {isMenuDisplayed &&\n        <DropdownMenu>\n          <li><Link to=\"/\">Topics</Link></li>\n          <li><Link to=\"/about\">About</Link></li>\n        </DropdownMenu>\n      }\n    </MenuContainer >\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from 'react-router-dom';\nimport logo from './logo.png';\nimport { Cards } from './components/Cards.js';\nimport { Topics } from './components/Topics.js';\nimport { About } from './components/About';\nimport { NotFound } from './components/NotFound';\nimport { Menu } from './components/Menu';\nimport { AppContainer, Logo, Header, Section } from './styled';\n\nReactDOM.render(\n  <React.StrictMode>\n    <AppContainer>\n      <Router>\n        <Header>\n          <Link to=\"/\"><Logo src={logo} alt=\"Logo\" /></Link>\n        </Header>\n        <Menu />\n        <Section>\n          <Switch>\n            <Route path=\"/\" exact component={Topics} />\n            <Route path=\"/about\" exact component={About} />\n            <Route path=\"/cards\" exact component={Cards} />\n            <Route component={NotFound} />\n          </Switch>\n        </Section>\n      </Router>\n    </AppContainer>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","export const About = () => {\n  return (\n    <div>\n      <h2>About</h2>\n      <p>This interface will help you efficiently revise flashcards</p>\n      <p>Make a habit of coming back each day to revise the topics needing revision.</p>\n      <p>If you wish to use the REST API (for example to edit or delete a card or topic), please see the <a href=\"https://github.com/lydiamross/COMP6013\">documentation in the GitHub repository</a></p>\n    </div>\n  );\n};\n","import React, { useState, useEffect, useReducer } from 'react';\nimport { Link } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus, faMinus } from '@fortawesome/free-solid-svg-icons';\nimport moment from 'moment';\nimport { AddNewForm, FormInput, Button } from '../styled';\nimport { usePagination } from '../utils/usePagination';\nimport { usePersistedState } from '../utils/usePersistedState';\nimport { Card } from './Card';\n\nexport const Cards = (props) => {\n  const [cards, setCards] = useState([]);\n  const [cardQuestion, setCardQuestion] = useState('');\n  const [cardAnswer, setCardAnswer] = useState('');\n  const [isFormDisplayed, setFormDisplay] = useState(false);\n  const [topicPath, setTopicPath] = usePersistedState('topicPath', null);\n  const [topicName, setTopicName] = usePersistedState('topicName', null);\n  const [, forceUpdate] = useReducer(x => x + 1, 0);\n  const [redirectMessage, setRedirectMessage] = useState();\n  const [isFilterDisplayed, setFilterDisplayed] = useState(false);\n\n  const handleFormDisplay = () => {\n    setFormDisplay(!isFormDisplayed);\n    setRedirectMessage('');\n  };\n\n  useEffect(() => {\n    setTopicPath(props.location.aboutProps !== undefined ? props.location.aboutProps.topicId : topicPath);\n    setTopicName(props.location.aboutProps !== undefined ? props.location.aboutProps.topicName : topicName);\n    fetch(`/api/cards/${topicPath}`)\n      .then(response => response.json())\n      .then(setCards)\n      .catch(error => {\n        console.error('ERROR:', error);\n      });\n  }, [props.location.aboutProps, topicPath, topicName, setTopicPath, setTopicName]);\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    fetch(`/api/cards`, {\n      method: 'POST',\n      body: JSON.stringify({\n        topicId: topicPath,\n        question: cardQuestion,\n        answer: cardAnswer\n      }),\n      headers: { 'Content-Type': 'application/json' },\n    })\n      .then((response) => response.json())\n      .then(newCard => {\n        cards.push(newCard);\n        setCards(cards);\n        setCardQuestion('');\n        setCardAnswer('');\n        setFormDisplay(!isFormDisplayed);\n        forceUpdate();\n        setRedirectMessage('Card added');\n      })\n      .catch(error => {\n        console.error('ERROR:', error);\n        setRedirectMessage('Error - Card not added');\n      });\n  };\n\n  const handleUpdateCard = (event, page) => {\n    event.preventDefault();\n    fetch(`/api/spaced`, {\n      method: 'PATCH',\n      body: JSON.stringify({\n        _id: paginatedData.currentData()[0]._id,\n        status: event.target.title,\n      }),\n      headers: { 'Content-Type': 'application/json' },\n    })\n      .then((response) => response.json())\n      .then(() => paginatedData.next(page))\n      .catch(error => {\n        console.error('ERROR:', error);\n        setRedirectMessage('Error');\n      });\n  };\n\n  const filteredCards = cards.filter(card => moment(card.dateToNextBeRevised).isBefore(moment()));\n  const filteredPaginatedData = usePagination(filteredCards, 1);\n  const allPaginatedData = usePagination(cards, 1);\n  const paginatedData = isFilterDisplayed ? allPaginatedData : filteredPaginatedData;\n  \n  const canViewAssessmentButtons =\n    (paginatedData.currentData().length !== 0) && \n    (paginatedData.currentPage <= paginatedData.maxPage);\n\n  const canViewSuccessMessage =\n    (paginatedData.maxPage !== 0) &&\n    (paginatedData.currentPage > paginatedData.maxPage);\n\n  const canViewNoCardsMessage =\n    (allPaginatedData.currentData().length === 0) &&\n    !canViewSuccessMessage;\n  \n  const canViewNoFilteredCardsMessage =\n    (paginatedData.currentData().length === 0) &&\n    !canViewSuccessMessage && !canViewNoCardsMessage;\n\n  return (\n    <div className=\"cards\">\n      <h2>{topicName}</h2>\n\n      {cards.length !== 0 &&\n        paginatedData.currentData().map(card =>\n          <Card key={card._id} card={card} />\n        )}\n\n      {canViewNoFilteredCardsMessage &&\n        <div>\n          <p>There are no cards that need revising at the moment, but you can revise anyway if you like</p>\n          <Button\n            onClick={() => setFilterDisplayed(true)}>Show all cards</Button>\n        </div>}\n\n      {canViewNoCardsMessage &&\n        <div>\n          <p>You don't have any cards yet - please add some!</p>\n        </div>}\n\n      {canViewAssessmentButtons &&\n        <div>\n          <Button\n            title=\"unsure\"\n            onClick={handleUpdateCard}>I don't remember this at all</Button>\n          <Button\n            title=\"neutral\"\n            onClick={handleUpdateCard}>I barely know this </Button>\n          <Button\n            title=\"confident\"\n            onClick={handleUpdateCard}>I'm confident I know this</Button>\n        </div>}\n\n      {canViewSuccessMessage &&\n        <div>\n          <div>Well done!</div>\n          <p>Please return <Link to=\"/\">Home</Link></p>\n        </div>}\n\n      <Button\n        type=\"submit\"\n        onClick={handleFormDisplay}>\n        {!isFormDisplayed ?\n          <span>Add new card <FontAwesomeIcon icon={faPlus} /></span> :\n          <span>Hide <FontAwesomeIcon icon={faMinus} /></span>}\n      </Button>\n\n      {isFormDisplayed && <AddNewForm>\n        <form onSubmit={handleSubmit}>\n          <label htmlFor=\"question\">Question: </label>\n          <FormInput\n            type=\"text\"\n            name=\"question\"\n            value={cardQuestion}\n            onChange={({ target: { value } }) => setCardQuestion(value)} />\n          <br />\n          <label htmlFor=\"answer\">Answer: </label>\n          <FormInput\n            type=\"text\"\n            name=\"answer\"\n            value={cardAnswer}\n            onChange={({ target: { value } }) => setCardAnswer(value)} />\n          <br />\n          <Button\n            type=\"submit\"\n            disabled={!cardQuestion || !cardAnswer}>OK</Button>\n        </form>\n      </AddNewForm>}\n\n      <p>{redirectMessage}</p>\n\n    </div>\n  )\n};\n","import { Link } from 'react-router-dom';\n\nexport const NotFound = () => (\n  <div>\n    <h3>Not Found</h3>\n    <p>Please return <Link to=\"/\">Home</Link></p>\n  </div>\n);"],"sourceRoot":""}